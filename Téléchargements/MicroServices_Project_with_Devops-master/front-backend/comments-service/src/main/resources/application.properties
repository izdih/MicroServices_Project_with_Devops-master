# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database "netgloo_blog"

#spring.datasource.url = jdbc:mysql://localhost:3306/microservices?createDatabaseIfNotExist=true
spring.application.name=comment-service
spring.datasource.url = jdbc:mysql://mysql-db:3306/microservices?createDatabaseIfNotExist=true
spring.datasource.username = root
spring.datasource.password =root
#eureka.instance.hostname=localhost

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1
server.port=8086
# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy


# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

#specification de taille de donnee
spring.servlet.multipart.max-file-size=500MB
spring.servlet.multipart.max-request-size=500MB

eureka.client.service-url.defaultZone=http://localhost:8761/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true